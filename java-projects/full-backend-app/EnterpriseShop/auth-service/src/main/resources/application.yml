spring:
  application:
    name: auth-service
  profiles:
    active: dev
  
  # Database Configuration
  datasource:
    url: jdbc:postgresql://localhost:5432/auth_service_db
    username: postgres
    password: postgres
    driver-class-name: org.postgresql.Driver
  
  # JPA Configuration
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        jdbc:
          batch_size: 20
        order_inserts: true
        order_updates: true
        batch_versioned_data: true
  
  # Security Configuration
  security:
    jwt:
      secret: ${JWT_SECRET:enterpriseshop-jwt-secret-key-for-development-only-change-in-production}
      expiration: 86400000 # 24 hours in milliseconds
      refresh-expiration: 604800000 # 7 days in milliseconds
  
  # Cloud Configuration
  cloud:
    discovery:
      enabled: true
      service-id: ${spring.application.name}
  
  # Jackson Configuration
  jackson:
    default-property-inclusion: non_null
    serialization:
      write-dates-as-timestamps: false
    deserialization:
      fail-on-unknown-properties: false

# Server Configuration
server:
  port: 8081
  servlet:
    context-path: /auth

# Management Configuration
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: when-authorized
  metrics:
    export:
      prometheus:
        enabled: true
    tags:
      application: ${spring.application.name}
      environment: ${spring.profiles.active}

# Logging Configuration
logging:
  level:
    com.enterpriseshop: DEBUG
    org.springframework.security: DEBUG
    org.springframework.web: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/auth-service.log

# Eureka Client Configuration
eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/
    register-with-eureka: true
    fetch-registry: true
  instance:
    prefer-ip-address: true
    instance-id: ${spring.application.name}:${server.port}
    health-check-url-path: ${server.servlet.context-path}/actuator/health
    status-page-url-path: ${server.servlet.context-path}/actuator/info

---
# Development Profile
spring:
  config:
    activate:
      on-profile: dev
  datasource:
    url: jdbc:postgresql://localhost:5432/auth_service_db
    username: postgres
    password: postgres
  jpa:
    show-sql: true
    hibernate:
      ddl-auto: validate

logging:
  level:
    com.enterpriseshop: DEBUG
    org.springframework.security: DEBUG

---
# Production Profile
spring:
  config:
    activate:
      on-profile: prod
  datasource:
    url: ${DATABASE_URL}
    username: ${DATABASE_USERNAME}
    password: ${DATABASE_PASSWORD}
  security:
    jwt:
      secret: ${JWT_SECRET}
  jpa:
    show-sql: false
    hibernate:
      ddl-auto: validate

logging:
  level:
    com.enterpriseshop: INFO
    org.springframework.security: WARN

eureka:
  client:
    service-url:
      defaultZone: ${EUREKA_SERVER_URL:http://eureka-server:8761/eureka/}
